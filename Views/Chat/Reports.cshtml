@inherits TowerPortal.Views.Shared.PortalView
@using Rumble.Platform.Common.Utilities
@using TowerPortal.Models.Chat
@{
    ViewData["Title"] = "Chat Reports";
}

<div class="announcements-page-container">
    <div class="player-chat-container">
        @Html.ActionLink(linkText: "View player specific bans", actionName: "Player", controllerName: "Chat", routeValues: new {}, htmlAttributes: new {})
    </div>
    <div class="player-chat-container">
        @Html.ActionLink(linkText: "View announcements", actionName: "Announcements", controllerName: "Chat", routeValues: new {}, htmlAttributes: new {})
    </div>
    
    <h2>@ViewData["Title"]</h2>
    
    <div class="error-container">
        <h4 style="color: @(WasSuccessful ? "darkgreen" : "red")">@(StatusMessage)</h4>
    </div>
    
    <div class="chat-reports-container">
        <h3>New Chat Reports</h3>
        <table id="newChatReports" class="chat-reports">
            <tr>
                <td class="time">Time</td>
                <td class="reported">Reported</td>
                <td class="reporters">Reporters</td>
                <td class="logs">Logs</td>
                <td class="report-ignore">Ignore</td>
            </tr>
            @foreach (ChatReport data in ((List<ChatReport>) ViewData["NewChatReports"])!)
            {
                <tr>
                    <td>@DateTimeOffset.FromUnixTimeSeconds(@data.Time)</td>
                    <td><a href="/portal/player/details?id=@data.Reported["aid"]">@data.Reported["sn"]</a></td>
                    <td>
                        @foreach (GenericData reporters in @data.Reporters)
                        {
                            <a href="/portal/player/details?id=@reporters["aid"]">@reporters["sn"]</a>
                        }
                    </td>
                    <td>
                        @foreach (GenericData log in @data.Log)
                        {
                            if ((string) log["type"] == "chat")
                            {
                                GenericData player = data.Players.Find(entry => (string) entry["aid"] == (string) log["aid"]);
                                <p>
                                    <a href="/portal/player/details?id=@player?["aid"]">@player?["sn"]</a>: @log["text"]
                                </p>
                            }
                        }
                    </td>
                    <td>
                        <form class="chat-report-form" method="post" asp-controller="Chat" asp-action="Ignore">
                            <div class="accountId invisible">
                                <input id="accountId" class="accountId" type="text" name="accountId" value="@data.Reported["aid"]">
                            </div>
                            <div class="reportId invisible">
                                <input id="reportId" class="reportId" type="text" name="reportId" value="@data.Id">
                            </div>
                            <button id="ignoreButton" class="ignoreButton" disabled="@(!Permissions.Chat.Edit)" type="submit">Ignore</button>
                        </form>
                    </td>
                </tr>
            }
        </table>
    </div>
    
    <div class="chat-reports-container">
        <h3>Old Chat Reports</h3>
        <table id="oldChatReports" class="chat-reports">
            <tr>
                <td class="time">Time</td>
                <td class="reported">Reported</td>
                <td class="reporters">Reporters</td>
                <td class="logs">Logs</td>
            </tr>
            @foreach (ChatReport data in ((List<ChatReport>) ViewData["OldChatReports"])!)
            {
                <tr>
                    <td>@DateTimeOffset.FromUnixTimeSeconds(@data.Time)</td>
                    <td><a href="/portal/player/details?id=@data.Reported["aid"]">@data.Reported["sn"]</a></td>
                    <td>
                        @foreach (GenericData reporters in @data.Reporters)
                        {
                            <a href="/portal/player/details?id=@reporters["aid"]">@reporters["sn"]</a>
                        }
                    </td>
                    <td>
                        @foreach (GenericData log in @data.Log)
                        {
                            if ((string) log["type"] == "chat")
                            {
                                GenericData player = data.Players.Find(entry => (string) entry["aid"] == (string) log["aid"]);
                                <p>
                                    <a href="/portal/player/details?id=@player?["aid"]">@player?["sn"]</a>: @log["text"]
                                </p>
                            }
                        }
                    </td>
                </tr>
            }
        </table>
    </div>
</div>